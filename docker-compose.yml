version: '2.2'   # Docker Engine release 18.02.0+

services:

  nginx:
    container_name: 'nginx'
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    environment:
      - CERTBOT_EMAIL
    volumes:
      - ./frontend:/etc/nginx/html
      - nginx_secrets:/etc/letsencrypt
      - ./nginx:/etc/nginx/user_conf.d
    links:
      - node
      - postgres
    ports:
      - 80:80
      - 443:443
    # expose:
    #   - "80"
    env_file:
      - ./backend/.env.production
    #  - ./nginx/nginx-certbot.env
    extra_hosts:
      - "host.docker.internal:host-gateway"

  node:
    container_name: 'node'
    restart: always
    build:
      context: ./backend
    env_file:
      - ./backend/.env.production
    expose:
      - "4000"
    # volumes:
    #   - backend-data:/var/lib/backend
    links:
      - postgres
    environment:
      BE_DATABASE: ${BE_DATABASE}
      BE_USER: ${BE_USER}
      BE_PASSWORD: ${BE_PASSWORD}
      BE_PORT: ${BE_PORT}
      BE_HOST: postgres
    ports:
      - "4000:4000"
    networks: 
      - postgres
    depends_on:
      - "postgres"

  postgres:
    # env_file:
    #   - .env
    container_name: 'postgres'
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: ${BE_DATABASE}
      BE_DATABASE: ${BE_DATABASE}
      BE_USER: ${BE_USER}
      BE_PASSWORD: ${BE_PASSWORD}
      BE_PORT: ${BE_PORT}
      BE_HOST: ${BE_HOST}
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U postgres"]
    #   interval: 10s
    #   start_period: 10s
    #   timeout: 4s
    #   retries: 3
    image: postgres
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      - postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - ./backend/psql/sqls:/docker-entrypoint-initdb.d

networks:
  postgres:
    driver: bridge

volumes:
  # backend-data:
  postgres-data:
  nginx_secrets: