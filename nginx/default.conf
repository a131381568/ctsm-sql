
#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        charset      utf-8;
        listen       80             default_server;
        listen       [::]:80        default_server;
        server_name  localhost;
        root /etc/nginx/html;
        index index.html;
        server_tokens off;
        client_max_body_size 15M;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

		location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

             try_files $uri $uri/ @router;
             index index.html;
			# try_files $uri$args $uri$args/ $uri $uri/ /index.html =404;
            # expires max;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "Upgrade";
		}

        location @router {
            rewrite ^.*$ /index.html last;
        }


        location /api { 
            proxy_pass http://localhost:4000/graphql;
        }

        location ^~ /graphql/ {          
            proxy_read_timeout 5400s;
            proxy_send_timeout 5400s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;

            proxy_pass http://localhost:4000/graphql/;

            # return 301 http://localhost:4000/graphql/;


            # rewrite "http://localhost:3001/api";

            # proxy_pass_header *;
            # proxy_pass http://localhost:4000/graphql/;
            # proxy_set_header Host $proxy_host; 
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;

            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            # proxy_set_header Host $host;
            # proxy_cache_bypass $http_upgrade;
        }

        # error_page  404              http://localhost/notfound;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  http://localhost/notfound;
        # location = /50x.html {
        #     root   html;
        # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       4000;
        server_name  localhost;
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
